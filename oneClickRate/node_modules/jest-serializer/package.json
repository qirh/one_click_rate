{
  "_args": [
    [
      {
        "raw": "jest-serializer@^22.4.0",
        "scope": null,
        "escapedName": "jest-serializer",
        "name": "jest-serializer",
        "rawSpec": "^22.4.0",
        "spec": ">=22.4.0 <23.0.0",
        "type": "range"
      },
      "/Users/salehomar/Git/profHacksTakeTwo/oneClickRate/node_modules/jest/node_modules/jest-haste-map"
    ]
  ],
  "_from": "jest-serializer@>=22.4.0 <23.0.0",
  "_id": "jest-serializer@22.4.0",
  "_inCache": true,
  "_location": "/jest-serializer",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jest-serializer_22.4.0_1519128211052_0.21206914541972965"
  },
  "_npmUser": {
    "name": "mjesun",
    "email": "mjesun@hotmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jest-serializer@^22.4.0",
    "scope": null,
    "escapedName": "jest-serializer",
    "name": "jest-serializer",
    "rawSpec": "^22.4.0",
    "spec": ">=22.4.0 <23.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jest-runner/jest-haste-map",
    "/jest-runtime/jest-haste-map",
    "/jest/jest-haste-map"
  ],
  "_resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-22.4.0.tgz",
  "_shasum": "b5d145b98c4b0d2c20ab686609adbb81fe23b566",
  "_shrinkwrap": null,
  "_spec": "jest-serializer@^22.4.0",
  "_where": "/Users/salehomar/Git/profHacksTakeTwo/oneClickRate/node_modules/jest/node_modules/jest-haste-map",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "dependencies": {},
  "description": "Module for serializing and deserializing object into memory and disk. By default, the `v8` implementations are used, but if not present, it defaults to `JSON` implementation. Both serializers have the advantage of being able to serialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it through a replacer/reviver.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-dnqde95MiYfdc1ZJpjEiHCRvRGGJHPsZQARJFucEGIaOzxqqS9/tt2WzD/OUSGT6kxaEGLQE92faVJGdoCu+Rw==",
    "shasum": "b5d145b98c4b0d2c20ab686609adbb81fe23b566",
    "tarball": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-22.4.0.tgz",
    "fileCount": 3,
    "unpackedSize": 5877
  },
  "homepage": "https://github.com/facebook/jest#readme",
  "license": "MIT",
  "main": "build/index.js",
  "maintainers": [
    {
      "name": "mjesun",
      "email": "mjesun@hotmail.com"
    }
  ],
  "name": "jest-serializer",
  "optionalDependencies": {},
  "readme": "# jest-serializer\n\nModule for serializing and deserializing object into memory and disk. By\ndefault, the `v8` implementations are used, but if not present, it defaults to\n`JSON` implementation. Both serializers have the advantage of being able to\nserialize `Map`, `Set`, `undefined`, `NaN`, etc, although the JSON one does it\nthrough a replacer/reviver.\n\n## Install\n\n```sh\n$ yarn add jest-serializer\n```\n\n## API\n\nThree kinds of API groups are exposed:\n\n### In-memory serialization: `serialize` and `deserialize`\n\nThis set of functions take or return a `Buffer`. All the process happens in\nmemory. This is useful when willing to transfer over HTTP, TCP or via UNIX\npipes.\n\n```javascript\nimport {serialize, deserialize} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst buffer = serialize(myObject);\nconst myCopyObject = deserialize(buffer);\n```\n\n### Synchronous persistent filesystem: `readFileSync` and `writeFileSync`\n\nThis set of functions allow to send to disk a serialization result and retrieve\nit back, in a synchronous way. It mimics the `fs` API so it looks familiar.\n\n```javascript\nimport {readFileSync, writeFileSync} from 'jest-serializer';\n\nconst myObject = {\n  foo: 'bar',\n  baz: [0, true, '2', [], {}],\n};\n\nconst myFile = '/tmp/obj';\n\nwriteFileSync(myFile, myObject);\nconst myCopyObject = readFileSync(myFile);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git"
  },
  "version": "22.4.0"
}
